<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.mapper.purchase.PurchaseMapper" >
  <resultMap id="BaseResultMap" type="com.jk.model.purchase.Purchase" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="supplier_Number" property="supplierNumber" jdbcType="VARCHAR" />
    <result column="supplier_Source" property="supplierSource" jdbcType="VARCHAR" />
    <result column="company_Name" property="companyName" jdbcType="VARCHAR" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="business_Scope" property="businessScope" jdbcType="VARCHAR" />
    <result column="charge_Person" property="chargePerson" jdbcType="VARCHAR" />
    <result column="create_Date" property="createDate" jdbcType="DATE" />
    <result column="simple_Name" property="simpleName" jdbcType="VARCHAR" />
    <result column="classification" property="classification" jdbcType="VARCHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="profession" property="profession" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="weChat" property="wechat" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="adress" property="adress" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
      <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, supplier_Number, supplier_Source, company_Name, brand, business_Scope,
    charge_Person, create_Date, simple_Name, classification, contacts, profession, phone, 
    telephone, fax, email, qq, weChat, province, area, adress, user_id,status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from purchase
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from purchase
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="addPurchase" parameterType="com.jk.model.purchase.Purchase" >
    insert into purchase ( supplier_Number, supplier_Source,
      company_Name, brand, business_Scope,
      charge_Person, create_Date, simple_Name, 
      classification, contacts, profession, 
      phone, telephone, fax, 
      email, qq, weChat, 
      province, area, adress, 
      user_id,status)
    values ( #{supplierNumber,jdbcType=VARCHAR}, #{supplierSource,jdbcType=VARCHAR},
      #{companyName,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, #{businessScope,jdbcType=VARCHAR},
      #{chargePerson,jdbcType=VARCHAR},CURDATE(), #{simpleName,jdbcType=VARCHAR},
      #{classification,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, #{profession,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{adress,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER},1)
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.jk.model.purchase.Purchase" >
    update purchase
    <set >
      <if test="supplierNumber != null" >
        supplier_Number = #{supplierNumber,jdbcType=VARCHAR},
      </if>
      <if test="supplierSource != null" >
        supplier_Source = #{supplierSource,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >

company_Name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="businessScope != null" >
        business_Scope = #{businessScope,jdbcType=VARCHAR},
      </if>
      <if test="chargePerson != null" >
        charge_Person = #{chargePerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_Date = #{createDate,jdbcType=DATE},
      </if>
      <if test="simpleName != null" >
        simple_Name = #{simpleName,jdbcType=VARCHAR},
      </if>
      <if test="classification != null" >
        classification = #{classification,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="profession != null" >
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        weChat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="adress != null" >
        adress = #{adress,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePurchase" parameterType="com.jk.model.purchase.Purchase" >
    update purchase
    set supplier_Number = #{supplierNumber,jdbcType=VARCHAR},
      supplier_Source = #{supplierSource,jdbcType=VARCHAR},
      company_Name = #{companyName,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      business_Scope = #{businessScope,jdbcType=VARCHAR},
      charge_Person = #{chargePerson,jdbcType=VARCHAR},
      create_Date = #{createDate,jdbcType=DATE},
      simple_Name = #{simpleName,jdbcType=VARCHAR},
      classification = #{classification,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      weChat = #{wechat,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      adress = #{adress,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
    where id = #{id,jdbcType=INTEGER}
  </update>
    <!-- 查询供应商管理-->
    <select id="queryPurchase" parameterType="map" resultMap="BaseResultMap">
        select * from purchase   where  1 = 1
       <include refid="purchaseWhere"></include>
         limit ${(pages-1)*rows},${rows}
    </select>
    <sql id="purchaseWhere" >
        <if test="puerchase.supplierNumber !=null and  puerchase.supplierNumber !=''">
            and  supplier_Number   like  '%${puerchase.supplierNumber}%'
        </if>
        <if test="creatate !=null and  creatate !=''">
            and  DATE_FORMAT(create_Date,'%Y-%m-%d') ='${creatate}'
        </if>
        <if test="puerchase.supplierSource !=null and  puerchase.supplierSource !=''">
            and  supplier_Source   like  '%${puerchase.supplierSource}%'
        </if>
        <if test="puerchase.chargePerson !=null and  puerchase.chargePerson !=''">
            and  charge_Person   like  '%${puerchase.chargePerson}%'
        </if>
        <if test="puerchase.companyName !=null and  puerchase.companyName !=''">
            and company_Name   like  '%${puerchase.companyName}%'
        </if>

        <if test="puerchase.businessScope !=null and  puerchase.businessScope !=''">
            and  business_Scope   like  '%${puerchase.businessScope}%'
        </if>
        <if test="puerchase.brand !=null and  puerchase.brand !=''">
            and  brand   like  '%${puerchase.brand}%'
        </if>

    </sql>
    <select id="countPurchase"  parameterType="map"  resultType="int" >
        select count(*) from purchase  where  1  = 1
        <include refid="purchaseWhere"></include>
    </select>

    <select id="huiPurchase"  parameterType="map"  resultMap="BaseResultMap">
        select  *  from  purchase  where  supplier_Number  like '${supplierNumber}'
    </select>

    <insert id="addGood" >
        insert  into   xzs_good(good_Supplier_Number,good_num,good_name,good_size,good_unit,user_Id)
        values
        <foreach collection="goods" item="item" index="index" separator=",">
        (#{item.supplierNumber},#{item.goodNum},#{item.goodName},
        #{item.goodSize},#{item.goodUnit},#{item.userId})
       </foreach>
    </insert>

    <insert id="addGood1"  parameterType="com.jk.model.purchase.Good">
        insert  into   xzs_good(good_Supplier_Number,good_num,good_name,good_size,good_unit,user_Id)
        values(#{supplierNumber},#{goodNum},#{goodName},
            #{goodSize},#{goodUnit},#{userId})

    </insert>

    <select id="huiGood" parameterType="map" resultType="com.jk.model.purchase.Good">
        select id goodId, goodSupplierNumber supplierNumber,good_Num goodNum,good_Name goodName,good_Size goodSize,good_Unit goodUnit,user_id userId  from good  where  goodSupplierNumber  like '${supplierNumber}'
    </select>

    <insert id="addZheng"  parameterType="com.jk.model.purchase.Credential">
        insert  into  xzs_creaden(yingYe,zheng1,zheng2,zheng3,userId,supplierNumberZheng)
        values(#{yingYe},#{zheng1},#{zheng2},#{zheng3},#{userId},#{supplierNumberZheng})
    </insert>

    <update id="updatStatus"  parameterType="map">
        update  purchase  set  status=#{status}  where   supplier_Number  like  '${num}'

    </update>

</mapper>
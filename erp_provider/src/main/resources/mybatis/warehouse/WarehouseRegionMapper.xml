<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.mapper.warehouse.WarehouseRegionMapper" >
  <resultMap id="BaseResultMap" type="com.jk.model.warehouse.WarehouseRegion" >
    <id column="region_id" property="regionId" jdbcType="INTEGER" />
    <result column="region_name" property="regionName" jdbcType="VARCHAR" />
    <result column="region_place" property="regionPlace" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    region_id, region_name, region_place, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from warehouse_region
    where region_id = #{regionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from warehouse_region
    where region_id = #{regionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk.model.warehouse.WarehouseRegion" >
    insert into warehouse_region (region_id, region_name, region_place, 
      user_id)
    values (#{regionId,jdbcType=INTEGER}, #{regionName,jdbcType=VARCHAR}, #{regionPlace,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.model.warehouse.WarehouseRegion" >
    insert into warehouse_region
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="regionId != null" >
        region_id,
      </if>
      <if test="regionName != null" >
        region_name,
      </if>
      <if test="regionPlace != null" >
        region_place,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="regionId != null" >
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="regionName != null" >
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionPlace != null" >
        #{regionPlace,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.model.warehouse.WarehouseRegion" >
    update warehouse_region
    <set >
      <if test="regionName != null" >
        region_name = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionPlace != null" >
        region_place = #{regionPlace,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where region_id = #{regionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.model.warehouse.WarehouseRegion" >
    update warehouse_region
    set region_name = #{regionName,jdbcType=VARCHAR},
      region_place = #{regionPlace,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where region_id = #{regionId,jdbcType=INTEGER}
  </update>

  <!--查询所有-->
  <select id="queryDelivery" parameterType="map" resultType="com.jk.model.warehouse.WarehouseRegion">
    SELECT COUNT(wa.area_id)AS areaSum, b.shelfSum AS shelfSum, wr.region_id AS regionId, wr.region_name as regionName, wr.region_place as regionPlace, u.name AS userName
    FROM warehouse_region wr, warehouse_area wa, t_user u,
    (SELECT COUNT(ws.shelf_id) AS shelfSum,wa.pid pid FROM warehouse_shelf ws, warehouse_area wa where ws.pid = wa.area_id GROUP BY wa.pid) b
    WHERE b.pid = wr.region_id AND b.pid = wa.pid AND wr.user_id = u.id
    GROUP BY wr.region_id
  </select>

</mapper>